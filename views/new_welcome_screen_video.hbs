<div class="container">
  <img class="current_image_with_nav" src="/images/cinq_background_without_logo.png"/>
  <div id="new_welcome_screen_form" class="row centered-form">
    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
      <div class="panel panel-default">
        <div class="panel-heading">
          <h3 class="panel-title">New video as Welcome Screen</h3>
        </div>
        <div class="panel-body">
          <form id="upload_form">
            <div class="row">
              <div class="col-xs-12 col-sm-12 col-md-12">
                <div class="form-group">
                  <label for="title">Choose a title for the video</label>
                  <input type="text" name="title" id="title" class="form-control input-sm" placeholder="Title">
                </div>
              </div>
              <div class="col-xs-12 col-sm-12 col-md-12">
                <div class="form-group">
                  <label for="video">Choose a new video</label>
                  <input type="file" name="video" id="video" class="form-control input-sm" placeholder="Video">
                </div>
              </div>
              <div class="col-xs-6 col-sm-6 col-md-6">
                <div class="form-group flt_center">
                  <input type="checkbox" name="startScheduleWs" id="startScheduleWs">
                  <label for="startScheduleWs">I want to schedule this WS from:</label>
                  <input type='text' name="clockStart" id="clockStart" class="datepicker-here form-control input-sm" data-position="top center" data-language='en' data-timepicker="true" placeholder="Schedule start date and time" disabled/>
                </div>
              </div>
              <div class="col-xs-6 col-sm-6 col-md-6">
                <div class="form-group flt_center">
                  <input type="checkbox" class="vsb_hidden">
                  <label for="finishScheduleWs">To:</label>
                  <input type='text' name="clockFinish" id="clockFinish" class="datepicker-here form-control input-sm" data-position="top center" data-language='en' data-timepicker="true" placeholder="Schedule finish date and time" disabled/>
                </div>
              </div>
            </div>
            <input type="submit" value="Upload and create" class="btn btn-info col-xs-6 col-sm-6 col-md-6 col-lg-6">
          </form>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  const dateNow = new Date();
  const dateTomorrow = new Date(dateNow.getFullYear(), dateNow.getMonth(), (dateNow.getDate() + 1), dateNow.getHours(), dateNow.getMinutes(), dateNow.getSeconds()); 
  let formatedDate = moment(dateNow).format('DD/MM/YYYY - HH:mm');
  let expirationDate = moment(dateTomorrow).format('DD/MM/YYYY - HH:mm');
  let socket = io();
  let startDate = formatedDate;
  let finishDate = expirationDate;
  const Toast = Swal.mixin({
    toast: true,
    position: 'top',
    showConfirmButton: false,
    timer: 3000
  });

  $(document).ready(() => {
    $("#clockStart").val(formatedDate);
    $("#clockFinish").val(expirationDate);
  });

  $("#title").on("paste keyup change focusout", function() {
    if ($(this).val() === '' || $(this).val() === ' ') {
      $("#title").addClass('emptyFields');
      $("#title").removeClass('fulfilledFields');
    } else {
      $("#title").addClass('fulfilledFields');
      $("#title").removeClass('emptyFields');
    }
  });

  $("#video").on("paste keyup change focusout", function() {
    if ($(this).val() === '' || $(this).val() === ' ') {
      $("#video").addClass('emptyFields');
      $("#video").removeClass('fulfilledFields');
    } else {
      $("#video").addClass('fulfilledFields');
      $("#video").removeClass('emptyFields');
    }
  });

  $("#clockStart").on("paste keyup change focusout", function() {
    if ($(this).val() === '' || $(this).val() === ' ') {
      $("#clockStart").addClass('emptyFields');
      $("#clockStart").removeClass('fulfilledFields');
    } else {
      $("#clockStart").addClass('fulfilledFields');
      $("#clockStart").removeClass('emptyFields');
    }
  });

  $("#clockFinish").on("paste keyup change focusout", function() {
    if ($(this).val() === '' || $(this).val() === ' ') {
      $("#clockFinish").addClass('emptyFields');
      $("#clockFinish").removeClass('fulfilledFields');
    } else {
      $("#clockFinish").addClass('fulfilledFields');
      $("#clockFinish").removeClass('emptyFields');
    }
  });

  $('#startScheduleWs').change(function() {
    if ($(this).is(':checked')) {
      $('#clockStart, #clockFinish').prop('disabled', false);
    } else {
      $('#clockStart, #clockFinish').prop('disabled', true);
      $("#clockStart").val(formatedDate);
      $("#clockStart").addClass('fulfilledFields');
      $("#clockFinish").addClass('fulfilledFields');
    }
  });

  $('#clockStart').datepicker({
    dateTimeSeparator: " - ",
    clearButton: true,
    minDate: dateNow,
    minHours: dateNow,
    onSelect: function(fd, d, picker) {
      let yearStart = d.getYear().toString().substring(1);
      startDate = (d.getDate() + '-' + d.getMonth() + '-' + yearStart + ' ' + d.getHours() + ':' + d.getMinutes());
    }
  });

  $('#clockFinish').datepicker({
    dateTimeSeparator: " - ",
    clearButton: true,
    minDate: dateTomorrow,
    minHours: dateTomorrow,
    onSelect: function(fd, d, picker) {
      let yearFinish = d.getYear().toString().substring(1);
      finishDate = (d.getDate() + '-' + d.getMonth() + '-' + yearFinish + ' ' + d.getHours() + ':' + d.getMinutes());
    }
  });

  $('#clockStart, #clockFinish').on("change focusout", function() {
    if (startDate > finishDate || startDate == finishDate) {
      $("#clockStart").removeClass('fulfilledFields');
      $("#clockStart").addClass('emptyFields');
      $("#clockFinish").removeClass('fulfilledFields');
      $("#clockFinish").addClass('emptyFields');
      Toast.fire({
        type: 'warning',
        title: 'End date should be greater than start date!'
      })
    } else {
      $("#clockStart").removeClass('emptyFields');
      $("#clockStart").addClass('fulfilledFields');
      $("#clockFinish").removeClass('emptyFields');
      $("#clockFinish").addClass('fulfilledFields');
    }
  });

  $('#upload_form').submit(function(e) {
    e.preventDefault();

    let formData = new FormData($(this)[0]);

    const isDefault = $('#defaultVideo').is(':checked');
    const titleEmptyOrNull = $('#title').val() !== '' && $('#title').val() !== ' ';
    const titleEmpty = $('#title').val() === ''; 
    const videoEmpty = $('#video').get(0).files.length !== 0;
    const scheduledTime = $("#startScheduleWs").is(':checked') && ($("#clockStart").val() !== '' && $("#clockStart").val() !== ' ');
    const scheduledTimeFinish = $("#startScheduleWs").is(':checked') && ($("#clockFinish").val() !== '' && $("#clockFinish").val() !== ' ');
    const unscheduledTime = !$("#startScheduleWs").is(':checked');
    const finishTimeEmpty = $("#startScheduleWs").is(':checked') && ($("#clockFinish").val() === '' || $("#clockFinish").val() === ' ');
    const dateTime = startDate < finishDate;

    if ((isDefault && titleEmpty) || (titleEmptyOrNull && !isDefault && videoEmpty && ((scheduledTime && scheduledTimeFinish) || unscheduledTime)) && dateTime) {
      $("#title").addClass('fulfilledFields');
      $("#video").addClass('fulfilledFields');
      $("#clockStart").addClass('fulfilledFields');
      $("#clockFinish").addClass('fulfilledFields');

      $.ajax({
        url: '/api/new_welcome_screen_video',
        type: 'POST',
        data: formData,
        async: false,
        contentType: false,
        cache: false,
        enctype: 'multipart/form-data',
        processData: false,
        success: data => {
          Swal.fire({
            title: 'Success!',
            text: 'Video uploaded successfully!',
            type: 'success',
            confirmButtonText: 'OK, keep going!',
            confirmButtonColor: '#EE9658'
          }).then(result => {
            window.location.href = "/welcome_screens_list"
          });
        },
        error: () => {
          Swal.fire({
            title: 'Sorry',
            text: 'An issue has occurred :(',
            type: 'error',
            confirmButtonColor: '#EE9658'
          });
        }
      });
    } else {
      $("#title").addClass('emptyFields');
      $("#video").addClass('emptyFields');
      
      if (finishTimeEmpty)
        $("#clockFinish").addClass('emptyFields');

      Swal.fire({
        title: 'Attention',
        text: 'Please check the fields!',
        type: 'warning',
        confirmButtonColor: '#EE9658'
      });
    }

    socket.emit('UpdateOnDatabase');
  });
</script>